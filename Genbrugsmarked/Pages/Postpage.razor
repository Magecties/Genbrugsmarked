@page "/postpage"
@inject HttpClient Http;
@using Core;
@inject NavigationManager NavManager


<h1 class="mb-3 mt-3">Post List</h1>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Amount</th>
            <th>Price</th>
            <th>Shop</th>
            <th>Done</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in postlisten?? new Post[0])
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Category</td>
                <td>@item.Price</td>
                <td>@item.status</td>
                <td>
                  
                </td>
                <td>
                    
                </td>
                
            </tr>
        }
        
    </tbody>
</table>



<img src="busy.gif" style="display:@busyDisplayStyle" />

<div>
  
</div>


@code {



    // Style for billede der vises når data hentes. Se
    // OnInitializedAsync().
    private string busyDisplayStyle = "none";

    // Objekt for formen der vises modal
    private Post post = new Post();

    // container for listen
    private Post[]? postlisten = new Post[0];

    // kontekst for formen
    private EditContext? aEditContext;

    // adresse på server
    private string serverUrl = "https://localhost:7235";
    /*
    protected override void OnInitialized()
    {
        aEditContext = new EditContext(Post);
    }
    /*
    public async Task HandleValidSubmit()
    {
        await AddPostItem();
        addDialog.Close();
    }
    */
    /*
    private async Task AddPostItem()
    {
        await Http.PostAsJsonAsync<Post>($"{serverUrl}/api/posts/add", Post);
        Console.WriteLine("Klient: add " + Post.Name + " " + Post.category);
        postlisten = await Http.GetFromJsonAsync<Post[]>($"{serverUrl}/api/posts/getall");
        postlisten = new(); // clear fields in form
    }
    */
    public string boolAsText(bool b)
    {
        return b ? "YES" : "NO";
    }

    protected override async Task OnInitializedAsync()
    {
        busyDisplayStyle = "block"; // tænd busy
        postlisten = await Http.GetFromJsonAsync<Post[]>($"{serverUrl}/api/posts/getall");
        busyDisplayStyle = "none"; // sluk busy
    }

    private async Task DeletePostItem(Post item)
    {
        await Http.DeleteAsync($"{serverUrl}/api/posts/delete/{item.Id}");

        postlisten = await Http.GetFromJsonAsync<Post[]>($"{serverUrl}/api/posts/getall");

    }

    private async Task UpdatePostItem(Post item)
    {
        //item.Done = !item.Done;
        await Http.PutAsJsonAsync<Post>($"{serverUrl}/api/posts/update", item);
    }
    
   // private ModalDialog? addDialog { get; set; }
}

